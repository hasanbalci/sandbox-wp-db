name: Link to PR Artifacts

on:
  workflow_run:
    types:
      - "completed"
    workflows:
      - "On Pull Request"

jobs:
  comment-on-pr:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:

      - name: Get Artifact URL & PR Info
        env:
          GITHUB_TOKEN: ${{ github.token }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          WORKFLOW_RUN_EVENT_OBJ: ${{ toJSON(github.event.workflow_run) }}
        run: |
          #ARTIFACT FILENAMES
          INFOJSON_FN="info.json"
          DNTSV_FN="datanodes.tsv"
          REFTSV_FN="refs.tsv"
          
          #echo "Workflow run event obj: $WORKFLOW_RUN_EVENT_OBJ"
          
          PREVIOUS_JOB_ID=$(jq -r '.id' <<< "$WORKFLOW_RUN_EVENT_OBJ")
          echo "Previous Job ID: $PREVIOUS_JOB_ID"
          echo "PREVIOUS_JOB_ID=$PREVIOUS_JOB_ID" >> "$GITHUB_ENV"

          INFOJSON_URL=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
            --jq ".artifacts.[] |
            select(.name ==${INFOJSON_FN}) |
            select(.workflow_run.id==${PREVIOUS_JOB_ID}) |
            select(.expired==false) | 
            .archive_download_url")

          echo "INFOJSON_URL: $INFOJSON_URL"
          echo "INFOJSON_URL=$INFOJSON_URL" >> "$GITHUB_ENV"

          DNTSV_URL=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
            --jq ".artifacts.[] |
            select(.name ==${DNTSV_FN}) |
            select(.workflow_run.id==${PREVIOUS_JOB_ID}) |
            select(.expired==false) | 
            .archive_download_url")

          echo "DNTSV_URL: $DNTSV_URL"
          echo "DNTSV_URL=$DNTSV_URL" >> "$GITHUB_ENV"

          REFTSV_URL=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
            --jq ".artifacts.[] |
            select (.name ==${REFTSV_FN}) |
            select(.workflow_run.id==${PREVIOUS_JOB_ID}) |
            select(.expired==false) | 
            .archive_download_url")

          echo "REFTSV_URL: $REFTSV_URL"
          echo "REFTSV_URL=$REFTSV_URL" >> "$GITHUB_ENV"

          #PR_NUMBER=$(jq -r '.pull_requests[0].number' <<< "$WORKFLOW_RUN_EVENT_OBJ")
          PR_NUMBER=10  #TESTING
          
          echo "PR Number: $PR_NUMBER"
          echo "PR_NUMBER=$PR_NUMBER" >> "$GITHUB_ENV"

      - name: Update PR Description
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          CURRENT_DESCRIPTION=$(gh pr view $PR_NUMBER --json body -q ".body")
          NEW_DESCRIPTION="$CURRENT_DESCRIPTION
            ## Generated Files

            You can find files derived from the attached GPML in the table below. Please note that files only stay for around 90 days!

            | Name      | Link
            --------------------------------------------------------------------
            | info.json | ${{ env.INFOJSON_URL }}

            | datanode.tsv | ${{ env.DNTSV_URL }}

            | refs.tsv | ${{ env. REFTSV_URL }}
          "
          gh pr edit $PR_NUMBER --body "$NEW_DESCRIPTION"
